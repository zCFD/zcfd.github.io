source/control-dict.rst:12: (booleans)  zCFD will validate the parameters dictionary specified at run time against a set of expected values for each key. In general, values that should be integers and floats will be coerced to the correct type. Values which should be strings, booleans, lists or dictionaries will cause an error if they are the incorrect type. The time marching scheme and solver/equation set chosen defines which dictionary keys are valid. A simple script is provided to allow the user to check the validity of their input parameters before submitting their job. See 
source/control-dict.rst:40: (scaleX)  [scaleX,scaleY,scaleZ] : Any list of positive integers with length 3
source/control-dict.rst:40: (scaleY)  [scaleX,scaleY,scaleZ] : Any list of positive integers with length 3
source/control-dict.rst:40: (scaleZ)  [scaleX,scaleY,scaleZ] : Any list of positive integers with length 3
source/control-dict.rst:723: (EddyViscosity)  The conditions in the VTK file are specified by node based arrays with names ‘Pressure’, ‘Temperature’, ‘Velocity’, ‘TI’ and ‘EddyViscosity’. Note the field will override the conditions specified previously therefore the user can specify only the conditions that are different from default.
source/control-dict.rst:784: (csv)  However, the driving function is subsequently provided with key word arguments containing all the data in the ‘_report.csv’ file, evaluated at the previous timestep.
source/control-dict.rst:785: (csv)  For any driven initial condition, every value in the initial condition dictionary is also appended to the _report.csv file.
source/control-dict.rst:787: (acheived)  This means that the initial condition can be programmed to respond to the flow. An example is shown below, where the driven IC will continually adjust inlet angle of attack until a specified lift coefficient is acheived.
source/control-dict.rst:789: (propogate)  If the driven initial condition has been programmed to respond to changes in the flow, it is important to ensure that the flow has had enough time to propogate from the farfield through to the region of interest and settle before readjusting the driven initial condition.
source/control-dict.rst:790: (timestepping)  For simulations where the farfield is distant from the geometry, local and implicit timestepping will likely give the fastest propogation of adjusted farfield conditions through the domain.
source/control-dict.rst:790: (propogation)  For simulations where the farfield is distant from the geometry, local and implicit timestepping will likely give the fastest propogation of adjusted farfield conditions through the domain.
source/control-dict.rst:1131: (cability)  zCFD has the cability of simulating Fluid Structure Interaction (FSI) using both a modal model, as well as any generic full FEA program through the use of our generic coupling scheme.
source/control-dict.rst:1135: (pre)  The modal model must be pre calculated and provided at run time. The total displacement of the structure is calculated from the contribution of each mode when excited by the force exerted by the fluid using the method of modal superposition. This displacement is then propagated through the mesh using the RBF or IDW transform capability detailed in 
source/control-dict.rst:1135: (newmark)   . For both steady and unsteady simulations the structural solution is advanced using a newmark integration scheme. The dictionary keys related to the different mesh deformation algorithms are the same as described in 
source/control-dict.rst:1192: (definining)  . The default file contains 4 hooks definining points within the code when FSI actions can be performed- post intialisation, start of the real time cycle, post advance and post solve. In addition the file contains examples of all the functions available to the user for data communication, and how they should be executed in regards the rank of the CPU. In general any user written code for communication should be performed on the rank 0 CPU to avoid issues with parallelisation. The generic FSI scheme can be setup using the 
source/control-dict.rst:1192: (intialisation)  . The default file contains 4 hooks definining points within the code when FSI actions can be performed- post intialisation, start of the real time cycle, post advance and post solve. In addition the file contains examples of all the functions available to the user for data communication, and how they should be executed in regards the rank of the CPU. In general any user written code for communication should be performed on the rank 0 CPU to avoid issues with parallelisation. The generic FSI scheme can be setup using the 
source/control-dict.rst:1227: (fluidic)  The fluidic zone properties are defined using consecutively numbered blocks like
source/control-dict.rst:1271: (cd)  where the parameters cd, beta_p,beta_d, Ceps_4 and Ceps_5 are defined in the literature (for example Desmond, 2014) and the leaf area density (LAD) is typically specified using a function
source/control-dict.rst:1271: (Ceps)  where the parameters cd, beta_p,beta_d, Ceps_4 and Ceps_5 are defined in the literature (for example Desmond, 2014) and the leaf area density (LAD) is typically specified using a function
source/control-dict.rst:1271: (Ceps)  where the parameters cd, beta_p,beta_d, Ceps_4 and Ceps_5 are defined in the literature (for example Desmond, 2014) and the leaf area density (LAD) is typically specified using a function
source/control-dict.rst:1322: (et)  Two kinds of RBF transformation are available: the “Allen et al. greedy” method and the “multiscale” method. For the “greedy” method
source/control-dict.rst:1322: (al)  Two kinds of RBF transformation are available: the “Allen et al. greedy” method and the “multiscale” method. For the “greedy” method
source/control-dict.rst:1322: (multiscale)  Two kinds of RBF transformation are available: the “Allen et al. greedy” method and the “multiscale” method. For the “greedy” method
source/control-dict.rst:1341: (multiscale)  For the “multiscale” method
source/control-dict.rst:1401: (spcified)   blocks may be spcified.
source/control-dict.rst:1513: (Aero)  Aero-acoustics
source/control-dict.rst:1515: (aero)  Broadband aero-acoustic simulations can be performed by selecting the DGCAA solver.  Aero-acoustic sources are currently limited to stochastic noise sources generated by the FRPM method.  These sources are typically driven by a steady state RANS simulation.  Several FRPM domains can be defined within the aero-acoustic simulation by adding additional 
source/control-dict.rst:1515: (Aero)  Broadband aero-acoustic simulations can be performed by selecting the DGCAA solver.  Aero-acoustic sources are currently limited to stochastic noise sources generated by the FRPM method.  These sources are typically driven by a steady state RANS simulation.  Several FRPM domains can be defined within the aero-acoustic simulation by adding additional 
source/control-dict.rst:1515: (aero)  Broadband aero-acoustic simulations can be performed by selecting the DGCAA solver.  Aero-acoustic sources are currently limited to stochastic noise sources generated by the FRPM method.  These sources are typically driven by a steady state RANS simulation.  Several FRPM domains can be defined within the aero-acoustic simulation by adding additional 
source/control-dict.rst:1735: (temperaturegrad)  temperaturegrad
source/control-dict.rst:1736: (potentialtemperature)  potentialtemperature
source/control-dict.rst:1741: (velocitygradient)  velocitygradient
source/control-dict.rst:1742: (cp)  cp
source/control-dict.rst:1743: (totalcp)  totalcp
source/control-dict.rst:1743: (presure)  Total presure coefficient
source/control-dict.rst:1746: (kinematicviscosity)  kinematicviscosity
source/control-dict.rst:1747: (vorticity)  vorticity
source/control-dict.rst:1748: (Qcriterion)  Qcriterion
source/control-dict.rst:1749: (reynoldstress)  reynoldstress
source/control-dict.rst:1750: (helicity)  helicity
source/control-dict.rst:1751: (enstrophy)  enstrophy
source/control-dict.rst:1752: (ek)  ek
source/control-dict.rst:1753: (lesregion)  lesregion
source/control-dict.rst:1754: (turbulenceintensity)  turbulenceintensity
source/control-dict.rst:1755: (turbulencekineticenergy)  turbulencekineticenergy
source/control-dict.rst:1756: (turbulenceeddyfrequency)  turbulenceeddyfrequency
source/control-dict.rst:1759: (cellzone)  cellzone
source/control-dict.rst:1760: (cellorder)  cellorder
source/control-dict.rst:1762: (viscouslengthscale)  viscouslengthscale
source/control-dict.rst:1763: (walldistance)  walldistance
source/control-dict.rst:1765: (menterf)  menterf1
source/control-dict.rst:1776: (pressureforce)  pressureforce
source/control-dict.rst:1777: (pressuremoment)  pressuremoment
source/control-dict.rst:1778: (pressuremomentx)  pressuremomentx
source/control-dict.rst:1779: (pressuremomenty)  pressuremomenty
source/control-dict.rst:1780: (pressuremomentz)  pressuremomentz
source/control-dict.rst:1781: (frictionforce)  frictionforce
source/control-dict.rst:1782: (frictionmoment)  frictionmoment
source/control-dict.rst:1783: (frictionmomentx)  frictionmomentx
source/control-dict.rst:1784: (frictionmomenty)  frictionmomenty
source/control-dict.rst:1785: (frictionmomentz)  frictionmomentz
source/control-dict.rst:1787: (yplus)  yplus
source/control-dict.rst:1787: (dinemsional)  Non-dinemsional wall distance
source/control-dict.rst:1790: (facecentre)  facecentre
source/control-dict.rst:1791: (frictionvelocity)  frictionvelocity
source/control-dict.rst:1791: (ut)  ut
